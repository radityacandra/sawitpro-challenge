# This is the OpenAPI specification for your service. It is used to generate the client code.
# To generate the server code, use the Gradle task `openApiGenerate`. The 
# generated code will be placed in `build/generate-resources/main`.
#
# We will evaluate you based on how well you design your API.
# 1. How well it follows REST principles.
# 2. How easy it is to understand and use.
#
# References
# 1. https://swagger.io/specification/
openapi: "3.0.0"
info:
  version: 1.0.0
  title: User Service
  license:
    name: MIT
servers:
  - url: http://localhost
paths:
  /users:
    post:
      summary: Register a new user
      operationId: registerUser
      requestBody:
        description: user object to be registered
        content:
          application/json:
            schema: 
              $ref: '#/components/schemas/CreateUserRequest'
            examples:
              valid payload:
                value:
                  phoneNumber: "+6281123456789"
                  password: Test123!!!
                  fullName: Test User
              invalid payload:
                value:
                  phoneNumber: "6281123456789"
                  password: Test123
                  fullName: U
      responses:
        '200':
          description: Success Response
          content:
            application/json:    
              schema:
                type: object
                required:
                  - success
                  - data
                  - message
                  - code
                properties:
                  success:
                    type: boolean
                  data:
                    $ref: "#/components/schemas/CreateUserResponse"
                  message:
                    type: string
                  code:
                    type: integer
              examples:
                success:
                  value:
                    success: true
                    message: data provided
                    code: 200
                    data:
                      phoneNumber: "+6281123456789"
                      fullName: Test
                      password: Password123!!!
        '400':
          description: Error Response
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                "validation error":
                  value:
                    success: false
                    message: "validation error: PhoneNumber field...."
                    code: 400
                    data:
                    errors:
                      - field: PhoneNumber
                        message: pattern doesn't match
                      - field: FullName
                        message: minimum 3 characters length
        '409':
          description: Conflicted User
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                error:
                  value:
                    success: false
                    message: "user with the same phone number already exist"
                    code: 400
                    data: null
                    errors: []
  /users/auth:
    post:
      summary: Authenticate a user
      operationId: authenticateUser
      requestBody:
        description: field to be authenticated
        content:
          application/json:
            schema: 
              $ref: '#/components/schemas/AuthenticateUserRequest'
            examples:
              valid payload:
                value:
                  phoneNumber: "+6281123456789"
                  password: Test123!!!
              invalid payload:
                value:
                  phoneNumber: "6281123456789"
                  password: Test123
      responses:
        '200':
          description: Success Response
          content:
            application/json:    
              schema:
                type: object
                required:
                  - success
                  - data
                  - message
                  - code
                properties:
                  success:
                    type: boolean
                  data:
                    $ref: "#/components/schemas/AuthenticateUserResponse"
                  message:
                    type: string
                  code:
                    type: integer
        '400':
          description: Error Response
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                "validation error":
                  value:
                    success: false
                    message: "validation error: PhoneNumber field...."
                    code: 400
                    data:
                    errors:
                      - field: PhoneNumber
                        message: pattern doesn't match
  /users/profile:
    get:
      summary: Get authenticated user profile
      operationId: getUserProfile
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Success Response
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - data
                  - message
                  - code
                properties:
                  success:
                    type: boolean
                  data:
                    $ref: "#/components/schemas/UserProfileDto"
                  message:
                    type: string
                  code:
                    type: integer
              examples:
                success:
                  value:
                    success: true
                    message: data provided
                    code: 200
                    data:
                      phoneNumber: "+6281123456789"
                      fullName: Test
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                "invalid header":
                  value:
                    success: false
                    message: "invalid authorization header"
                    code: 400
                    data: null
                    errors: []
                "expired token":
                  value:
                    success: false
                    message: "token has been expired"
                    code: 400
                    data: null
                    errors: []
    put:
      summary: Update currently authenticated user
      operationId: updateProfile
      security:
        - bearerAuth: []
      requestBody:
        description: field to be updated. only attach those need to be updated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfileDto'
            examples:
              "valid - all field":
                value:
                  fullName: Test User Updated
                  phoneNumber: "+6281123456788"
              "valid - partial":
                value:
                  fullName: Test User Updated
              "invalid":
                value:
                  fullName: Te
                  phoneNumber: "628112"
      responses:
        '200':
          description: Success Response
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - data
                  - message
                  - code
                properties:
                  success:
                    type: boolean
                  data:
                    $ref: "#/components/schemas/AuthenticateUserResponse"
                  message:
                    type: string
                  code:
                    type: integer
              examples:
                success:
                  value:
                    success: true
                    message: data provided
                    code: 200
                    data:
                      phoneNumber: "+6281123456789"
                      fullName: Test
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                "invalid header":
                  value:
                    success: false
                    message: "invalid authorization header"
                    code: 400
                    data: null
                    errors: []
                "expired token":
                  value:
                    success: false
                    message: "token has been expired"
                    code: 400
                    data: null
                    errors: []
components:
  schemas:
    CreateUserRequest:
      type: object
      required:
        - phoneNumber
        - fullName
        - password
      properties:
        phoneNumber:
          type: string
          x-oapi-codegen-extra-tags:
            validate: "min=10,max=14,phoneNumber"
          minLength: 10
          maxLength: 14
        fullName:
          type: string
          x-oapi-codegen-extra-tags:
            validate: "min=3,max=60"
          minLength: 3
          maxLength: 60
        password:
          type: string
          x-oapi-codegen-extra-tags:
            validate: min=6,max=64,password
          minLength: 6
          maxLength: 64
          pattern: ^(?=.*[A-Z])(?=.*[0-9])(?=.*[-!$%^&*()_+|~=`{}\[\]:";'<>?,.\/])[\x00-\x7F]{3,64}$
    CreateUserResponse:
      type: object
      required:
        - id
        - phoneNumber
        - fullName
      properties:
        id:
          type: integer
        phoneNumber:
          type: string
        fullName:
          type: string
    ErrorResponse:
      type: object
      properties:
        success:
          type: boolean
        data:
          type: object
        message:
          type: string
        code:
          type: integer
        errors:
          type: array
          items:
            properties:
              field:
                type: string
              message:
                type: string
    AuthenticateUserRequest:
      type: object
      required:
        - phoneNumber
        - password
      properties:
        phoneNumber:
          type: string
          x-oapi-codegen-extra-tags:
            validate: "min=10,max=14,phoneNumber"
          minLength: 10
          maxLength: 14
        password:
          type: string
          x-oapi-codegen-extra-tags:
            validate: min=6,max=64,password
          minLength: 6
          maxLength: 64
          pattern: ^(?=.*[A-Z])(?=.*[0-9])(?=.*[-!$%^&*()_+|~=`{}\[\]:";'<>?,.\/])[\x00-\x7F]{3,64}$
    AuthenticateUserResponse:
      type: object
      properties:
        accessToken:
          type: string
        expiredAt:
          type: integer
          format: int64
    UserProfileDto:
      type: object
      properties:
        phoneNumber:
          type: string
          x-oapi-codegen-extra-tags:
            validate: "omitnil,min=10,max=14,phoneNumber"
          minLength: 10
          maxLength: 14
        fullName:
          type: string
          x-oapi-codegen-extra-tags:
            validate: "omitnil,min=3,max=60"
          minLength: 3
          maxLength: 60
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
